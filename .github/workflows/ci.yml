name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
  JIRA_BASE_URL: https://yourcompany.atlassian.net

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run flake8
        run: flake8 .

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: testdb
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Run tests
        run: |
          python manage.py test

  build-and-push:
    needs: [lint, test]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:latest .
      - name: Push Docker image
        run: docker push ${{ env.IMAGE_NAME }}:latest

  notify-slack:
    if: always()
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "CI/CD завершено: ${{ job.status }} для комміту `${{ github.sha }}`"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_URL }}

  update-jira:
    if: success()
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Update Jira issue (demo)
        run: |
          curl -X POST \
            -H "Authorization: Basic $(echo "email:${JIRA_API_TOKEN}" | base64)" \
            -H "Content-Type: application/json" \
            --data '{"body": "Build passed for commit '"${{ github.sha }}"'"}' \
            "${JIRA_BASE_URL}/rest/api/3/issue/PROJECT-123/comment"
