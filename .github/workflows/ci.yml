name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: tododb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.11.5
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.5

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install flake8 pytest coverage black

    - name: Static code analysis (flake8)
      run: flake8 app tests

    - name: Format code (black)
      run: black --check app tests

    - name: Run tests with coverage
      run: pytest tests --maxfail=1 --disable-warnings --cov=app

    - name: Acceptance Test
      run: |
        nohup python main.py &
        sleep 5
        curl -X GET http://127.0.0.1:5000/healthcheck

    - name: Build Docker Image
      run: docker build -t ghcr.io/devilocheek/indz-1:latest .

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image
      run: docker push ghcr.io/devilocheek/indz-1:latest

    - name: Slack notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

    - name: Create GitHub issue on failure
      if: failure()
      uses: peter-evans/create-issue-from-file@v4
      with:
        title: "CI failed on ${{ github.sha }}"
        content-filepath: error.log
        labels: bug, ci
