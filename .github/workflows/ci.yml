name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/django-app

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 mypy pytest

      - name: Static code analysis - flake8
        run: flake8 .

      - name: Static type checking - mypy
        run: mypy .

      - name: Run unit tests
        run: pytest tests/unit --maxfail=1 --disable-warnings -q

      - name: Run integration tests
        run: pytest tests/integration --maxfail=1 --disable-warnings -q

      - name: Run acceptance tests
        run: pytest tests/acceptance --maxfail=1 --disable-warnings -q

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: lint_and_test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:latest

  post_release_tasks:
    runs-on: ubuntu-latest
    needs: build_and_push_docker
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Notify Slack about successful release
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "Django-app успішно зібрано і випущено! Docker image: ${{ env.IMAGE_NAME }}:latest",
              "attachments": [
                {
                  "color": "good",
                  "fields": [
                    {
                      "title": "Гілка",
                      "value": "${{ github.ref }}",
                      "short": true
                    },
                    {
                      "title": "Коміт",
                      "value": "${{ github.sha }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Create Jira comment about release
        if: ${{ secrets.JIRA_API_TOKEN }}
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          ISSUE_KEY: YOURPROJECT-RELEASE
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          # Перевіряємо, чи всі потрібні змінні задані
          if [[ -z "$JIRA_BASE_URL" || -z "$JIRA_USER_EMAIL" || -z "$JIRA_API_TOKEN" ]]; then
            echo "Jira credentials missing, skipping Jira comment"
            exit 0
          fi

          COMMENT="Release successful: commit $GITHUB_SHA on branch main. Docker image: $IMAGE_NAME:latest"
          curl -X POST -u "$JIRA_USER_EMAIL:$JIRA_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data "{\"body\": \"${COMMENT//\"/\\\"}\"}" \
            "$JIRA_BASE_URL/rest/api/3/issue/$ISSUE_KEY/comment"
